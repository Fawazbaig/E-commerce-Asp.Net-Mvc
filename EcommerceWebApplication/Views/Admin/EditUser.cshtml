@model EcommerceWebApplication.Models.ViewModel.UserModel

@{
    ViewBag.Title = "EditUser";
}


<div class="container d-flex mt-5">
    <div class="col-lg-6 col-md-6">
        <img src="~/Assets/ecommerce.jpg" style="height:100%;width:100%;" />
    </div>
    <div class="col-lg-6 col-md-6" style="padding-left:8%;">
        @using (Html.BeginForm("EditUser","Admin",FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div style="padding-left:5%; padding-top:3%;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            <div class="form-group">
                @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <br />
                    <input type="submit" value="Submit" class="btn btn-primary col-md-10" />
                </div>
            </div>
        </div>
        }
    </div>
</div>


